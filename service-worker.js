"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/portfolio/index.html","a22640590ec625ff3b4b1116b4767887"],["/portfolio/static/css/main.33709d27.css","a3b08efcd261d86424734d5df959ac69"],["/portfolio/static/js/main.052bed46.js","16cb63793f42c2c2701551c1ad192e25"],["/portfolio/static/media/Resume_Gildon_Kirk_14pt.9e599d7a.png","9e599d7aed808ccd87b38ac0013aef79"],["/portfolio/static/media/TreeHorizontal1200.ab4fc304.png","ab4fc304df906c4b4923b7f3ce147f0b"],["/portfolio/static/media/TreeHorizontal992.fe3bdf1a.png","fe3bdf1a36841ac7631723eed24e2a95"],["/portfolio/static/media/TreeHorizontalNoSides.96baee0a.png","96baee0a69159b3c3e4e5974cce9d40c"],["/portfolio/static/media/dark_wall.6fb19d93.png","6fb19d93b5ab5f0b7aca4b1e130b8e36"],["/portfolio/static/media/dark_wall_light.2ecdb458.png","2ecdb458e9a2f417317f0e5b944d3380"],["/portfolio/static/media/gif.13558f22.jpg","13558f22e6af4a125096771a97f4fc1f"],["/portfolio/static/media/github.555c3c1f.png","555c3c1f6d22583bfdc32f584324775d"],["/portfolio/static/media/got.a2f93bcd.jpg","a2f93bcd21602ccd422a8d100eedd445"],["/portfolio/static/media/linkedIn.dddbd744.png","dddbd74453fbf4846c5ddfa8a64ba7d2"],["/portfolio/static/media/music.0d64a58b.jpg","0d64a58bcb700e78ad301fff67130ba5"],["/portfolio/static/media/profile_picture.c9c4e89f.JPG","c9c4e89f33998f136f7d37e1e7ba5b6b"],["/portfolio/static/media/starwars.1f768c2a.jpg","1f768c2a6586fb81926fb2ae9cd33f37"],["/portfolio/static/media/treeThumbnail.6aed90c5.png","6aed90c5ee2214f7e1056a2a619ba9b3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/portfolio/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});